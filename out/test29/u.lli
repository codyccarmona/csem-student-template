; ModuleID = 'QuadReader'
source_filename = "QuadReader"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@0 = private unnamed_addr constant [10 x i8] c"sum = %d\0A\00", align 1
@1 = private unnamed_addr constant [10 x i8] c"sum = %d\0A\00", align 1
@2 = private unnamed_addr constant [10 x i8] c"sum = %d\0A\00", align 1

declare i32 @printf(i8*, ...)

declare void @exit(i32)

declare i32 @getchar()

define i32 @main() {
entry:
  %i = alloca i32, align 4
  %sum = alloca i32, align 4
  store i32 0, i32* %sum, align 4
  store i32 0, i32* %i, align 4
  br label %L1

L1:                                               ; preds = %L2, %entry
  %t8 = load i32, i32* %i, align 4
  %t10 = icmp slt i32 %t8, 50
  br i1 %t10, label %L3, label %L6

L3:                                               ; preds = %L1
  %t18 = load i32, i32* %sum, align 4
  %t20 = icmp sgt i32 %t18, 100
  br i1 %t20, label %L4, label %L5

L6:                                               ; preds = %L1
  %t29 = load i32, i32* %sum, align 4
  %t31 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @0, i32 0, i32 0), i32 %t29)
  store i32 0, i32* %sum, align 4
  store i32 0, i32* %i, align 4
  br label %L7

L2:                                               ; preds = %L5, %L4
  %t13 = load i32, i32* %i, align 4
  %0 = add i32 %t13, 1
  store i32 %0, i32* %i, align 4
  br label %L1

L4:                                               ; preds = %L3
  br label %L2

L5:                                               ; preds = %L3
  %t23 = load i32, i32* %i, align 4
  %t24 = load i32, i32* %sum, align 4
  %1 = add i32 %t24, %t23
  store i32 %1, i32* %sum, align 4
  br label %L2

L7:                                               ; preds = %L10, %L9, %L6
  %t39 = load i32, i32* %i, align 4
  %t41 = icmp slt i32 %t39, 50
  br i1 %t41, label %L8, label %L11

L8:                                               ; preds = %L7
  %t44 = load i32, i32* %i, align 4
  %2 = add i32 %t44, 1
  store i32 %2, i32* %i, align 4
  %t49 = load i32, i32* %sum, align 4
  %t51 = icmp sgt i32 %t49, 100
  br i1 %t51, label %L9, label %L10

L11:                                              ; preds = %L7
  %t60 = load i32, i32* %sum, align 4
  %t62 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @1, i32 0, i32 0), i32 %t60)
  store i32 0, i32* %sum, align 4
  store i32 0, i32* %i, align 4
  br label %L12

L9:                                               ; preds = %L8
  br label %L7

L10:                                              ; preds = %L8
  %t54 = load i32, i32* %i, align 4
  %t55 = load i32, i32* %sum, align 4
  %3 = add i32 %t55, %t54
  store i32 %3, i32* %sum, align 4
  br label %L7

L12:                                              ; preds = %L15, %L11
  %t71 = load i32, i32* %i, align 4
  %4 = add i32 %t71, 1
  store i32 %4, i32* %i, align 4
  %t76 = load i32, i32* %sum, align 4
  %t78 = icmp sgt i32 %t76, 100
  br i1 %t78, label %L13, label %L14

L13:                                              ; preds = %L12
  br label %L15

L14:                                              ; preds = %L12
  %t81 = load i32, i32* %i, align 4
  %t82 = load i32, i32* %sum, align 4
  %5 = add i32 %t82, %t81
  store i32 %5, i32* %sum, align 4
  br label %L15

L15:                                              ; preds = %L14, %L13
  %t86 = load i32, i32* %i, align 4
  %t88 = icmp slt i32 %t86, 50
  br i1 %t88, label %L12, label %L16

L16:                                              ; preds = %L15
  %t91 = load i32, i32* %sum, align 4
  %t93 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @2, i32 0, i32 0), i32 %t91)
  ret i32 0
}
