; ModuleID = 'QuadReader'
source_filename = "QuadReader"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@0 = private unnamed_addr constant [9 x i8] c"i is %d\0A\00", align 1

declare i32 @printf(i8*, ...)

declare void @exit(i32)

declare i32 @getchar()

define i32 @main() {
entry:
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  store i32 1, i32* %i, align 4
  br label %L1

L1:                                               ; preds = %L5, %entry
  %t5 = load i32, i32* %i, align 4
  %t7 = icmp slt i32 %t5, 5
  br i1 %t7, label %L2, label %L6

L2:                                               ; preds = %L1
  store i32 1, i32* %k, align 4
  br label %L3

L6:                                               ; preds = %L1
  ret i32 0

L3:                                               ; preds = %L4, %L2
  %t12 = load i32, i32* %k, align 4
  %t14 = icmp slt i32 %t12, 5
  br i1 %t14, label %L4, label %L5

L4:                                               ; preds = %L3
  %t17 = load i32, i32* %i, align 4
  %t19 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @0, i32 0, i32 0), i32 %t17)
  %t22 = load i32, i32* %k, align 4
  %0 = add i32 %t22, 1
  store i32 %0, i32* %k, align 4
  br label %L3

L5:                                               ; preds = %L3
  %t27 = load i32, i32* %i, align 4
  %1 = add i32 %t27, 1
  store i32 %1, i32* %i, align 4
  br label %L1
}
