; ModuleID = 'QuadReader'
source_filename = "QuadReader"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@0 = private unnamed_addr constant [9 x i8] c"i is %d\0A\00", align 1
@1 = private unnamed_addr constant [9 x i8] c"b is %f\0A\00", align 1

declare i32 @printf(i8*, ...)

declare void @exit(i32)

declare i32 @getchar()

define i32 @main() {
entry:
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %a = alloca double, align 8
  %b = alloca double, align 8
  %c = alloca double, align 8
  store i32 5, i32* %j, align 4
  %t6 = load i32, i32* %j, align 4
  %0 = sub i32 0, %t6
  store i32 %0, i32* %i, align 4
  %t11 = load i32, i32* %i, align 4
  %t13 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @0, i32 0, i32 0), i32 %t11)
  store double 1.100000e+01, double* %a, align 8
  %t20 = load double, double* %a, align 8
  %1 = fneg double %t20
  store double %1, double* %b, align 8
  %t25 = load double, double* %b, align 8
  %t27 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @1, i32 0, i32 0), double %t25)
  ret i32 0
}
