; ModuleID = 'QuadReader'
source_filename = "QuadReader"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@0 = private unnamed_addr constant [9 x i8] c"a is %d\0A\00", align 1
@1 = private unnamed_addr constant [9 x i8] c"b is %f\0A\00", align 1

declare i32 @printf(i8*, ...)

declare void @exit(i32)

declare i32 @getchar()

define i32 @test3(i32 %a, double %b) {
entry:
  %a1 = alloca i32, align 4
  store i32 %a, i32* %a1, align 4
  %b2 = alloca double, align 8
  store double %b, double* %b2, align 8
  %t3 = load i32, i32* %a1, align 4
  %t5 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @0, i32 0, i32 0), i32 %t3)
  %t8 = load double, double* %b2, align 8
  %t10 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @1, i32 0, i32 0), double %t8)
  ret i32 0
}

define i32 @main() {
entry:
  %i = alloca i32, align 4
  %f = alloca double, align 8
  store i32 10, i32* %i, align 4
  store double 1.500000e+01, double* %f, align 8
  %t19 = load i32, i32* %i, align 4
  %t21 = load double, double* %f, align 8
  %t23 = call i32 @test3(i32 %t19, double %t21)
  ret i32 0
}
