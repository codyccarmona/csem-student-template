6,8d5
< @0 = private unnamed_addr constant [9 x i8] c"i is %d\0A\00", align 1
< @1 = private unnamed_addr constant [9 x i8] c"j is %d\0A\00", align 1
< 
14,32d10
< 
< define i32 @main() {
< entry:
<   %i = alloca i32, align 4
<   %j = alloca i32, align 4
<   %k = alloca i32, align 4
<   store i32 10, i32* %j, align 4
<   store i32 4, i32* %k, align 4
<   %t9 = load i32, i32* %j, align 4
<   %t11 = load i32, i32* %k, align 4
<   %0 = or i32 %t9, %t11
<   store i32 %0, i32* %i, align 4
<   %t16 = load i32, i32* %i, align 4
<   %t18 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @0, i32 0, i32 0), i32 %t16)
<   %t21 = load i32, i32* %j, align 4
<   %1 = ashr i32 %t21, 1
<   %t25 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @1, i32 0, i32 0), i32 %1)
<   ret i32 0
< }
